<!-- views/index.ejs -->
<!doctype html>
<html>

<head>
    <% include partials/head %>
</head>

<body>
    <header>
        <% include partials/header %>

            <style media="screen">
                #map {
                    height: 100%;
                }

                .uib-time input {
                    width: 42px !important;
                }
            </style>


    </header>
    <main>
        <script src="js/trackingApp.js"></script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCfaLOJAefzXT75bIWgxd8RmcWz5rWbMec&signed_in=true&libraries=geometry">
        </script>

        <script type="text/javascript">
            // esto debido a que necesitamos lanzar manualmente la segunda ng-app de angular

            angular.element(document).ready(function() {
                angular.bootstrap(document.getElementById("trackingAppCont"), ['trackingApp']);
            });
        </script>

        <div id="trackingAppCont" class="container" ng-app="trackingApp" ng-controller="MainController">

            <!-- Opciones de Filtro -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-md-8">
                            <h4> Monitoreo en Tiempo Real</h4>
                        </div>
                        <div class="col-md-4 text-right">
                            <button type="button" class="btn btn-primary" name="button" ng-click="btnOpcionesBusquedaClick()"><i class="fa fa-filter" aria-hidden="true"></i>  {{btnBusquedaTitle}}</button>
                        </div>
                    </div>

                </div>

                <div class="panel-body" ng-show="mostrarOpcionesBusqueda">
                    <!-- Busqueda por identificador, tipo de unidad, asignado a -->

                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active"><a href="#filtrosTab" aria-controls="filtrosTab" role="tab" data-toggle="tab"><i class="fa fa-search" aria-hidden="true"></i> Opciones de BÃºsqueda</a></li>
                        <li role="presentation"><a href="#fechasTab" aria-controls="fechasTab" role="tab" data-toggle="tab"><i class="fa fa-calendar" aria-hidden="true"></i> Rango de Fechas</a></li>
                    </ul>

                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="filtrosTab">

                            <div class="row" style="margin-top:15px">
                                <div class="col-md-4">
                                    <div class="form-inline">
                                        <div class="form-group">
                                            <label for="cmbUnidad">Unidad:</label>
                                            <select id="cmbUnidad" class="form-control" style="width: 200px" ng-options="unidad.properties.identificador for unidad in unidadesFiltro track by unidad._id" ng-model="unidadFiltroSeleccionada" ng-change="cmbUnidadChange()">
                                            <option value="">Todas</option>
                                            </select>
                                        </div>
                                    </div>


                                </div>
                                <div class="col-md-4">
                                    <div class="form-inline">
                                        <div class="form-group">
                                            <label for="cmbTipo">Tipo:</label>
                                            <select id="cmbTipo" class="form-control" style="width: 200px" ng-options="tipo for tipo in listaTipos track by tipo" ng-model="tipoSeleccionado" ng-change="cmbTipoChange()">
                                            <option value="">Todos</option>
                                            </select>
                                        </div>
                                    </div>


                                </div>
                                <div class="col-md-4">

                                    <div class="form-inline">
                                        <div class="form-group">
                                            <label for="cmbAsignado">Asignado a:</label>
                                            <select id="cmbAsignado" class="form-control" style="width: 200px" ng-options="usuario.nombres for usuario in listaUsuarios track by usuario._id" ng-model="asignadoSeleccionado" ng-change="cmbUsuarioChange()">
                                            <option value="">Todos</option>
                                            </select>
                                        </div>
                                    </div>

                                </div>

                            </div>
                            <div class="row" style="margin-top: 15px;">
                                <div class="col-md-4">
                                    <div class="checkbox">
                                        <div class="form-group">
                                            <label>
                                                        <input type="checkbox" name="chkMostrarDesconectadas" ng-model="mostrarUnidadesDesconectadas" /> Mostrar unidades desconectadas.
                                                      </label>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-4">
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group text-center">

                                        <button type="button" class="btn btn-primary" name="button" ng-click="btnFiltrarClick()" style="width:250px"><i class="fa fa-filter" aria-hidden="true"></i>Filtrar</button>

                                    </div>

                                </div>

                            </div>

                        </div>
                        <div role="tabpanel" class="tab-pane" id="fechasTab">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form form-inline">

                                        <div class="form-group">
                                            <label for="">Desde:</label>
                                            <div class="input-group">
                                                <input type="text" name="fchInicio" class="form-control" id="fchInicio" uib-datepicker-popup="dd/MM/yyyy" is-open="popup1.opened" datepicker-options="dateOptions" ng-model="fechaDesde" style="width: 100px" />
                                                <span class="input-group-btn">
                                          <button type="button" class="btn btn-default" ng-click="open1()"><i class="glyphicon glyphicon-calendar"></i></button>
                                      </span>

                                            </div>
                                            <!--  <div uib-timepicker ng-model="fchInicio" hour-step="1" minute-step="10" show-meridian="false"></div> -->
                                        </div>
                                        <div class="form-group">
                                            <!--<label for="">Hora Inicio:</label> -->
                                            <div class="input-group">
                                                <div style="width: 80px; ">
                                                    <div uib-timepicker ng-model="horaInicio" id="horaInicioDiv" hour-step="1" minute-step="1" show-meridian="ismeridian"></div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-inline">
                                        <div class="form-group">
                                            <label for="">Hasta:</label>
                                            <div class="input-group">
                                                <input type="text" name="fchFin" class="form-control" id="fchFIn" uib-datepicker-popup="dd/MM/yyyy" is-open="popup2.opened" datepicker-options="dateOptions" ng-model="fechaHasta" style="width: 100px" />
                                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-default" ng-click="open2()"><i class="glyphicon glyphicon-calendar"></i></button>
                                    </span>

                                            </div>
                                            <!--  <div uib-timepicker ng-model="fchFin" hour-step="1" minute-step="10" show-meridian="false"></div> -->
                                        </div>

                                        <div class="form-group">
                                            <!--   <label for="">Hora Fin:</label>-->
                                            <div class="input-group" style="width: 80px">
                                                <div uib-timepicker ng-model="horaFin" hour-step="1" id="horaFinDiv" minute-step="1" show-meridian="ismeridian"></div>
                                            </div>

                                        </div>


                                    </div>

                                </div>
                                <div class="col-md-4">
                                </div>
                            </div>

                        </div>

                    </div>

                </div>
            </div>



            <!-- MAPA-->
            <div class="panel panel-default" style="height:700px">
                <div id="map">

                </div>

            </div>


            <script type="text/javascript">
                // obtener usuario de session
                var map;
                var currentMarker;
                var listaMarcadores = [];
                var ruta = [];
                var listaHistorial = [];
                var flightPath;
                var infowindow = null;
                var mainCtrl = angular.element(document.querySelector('[ng-controller="MainController"]'));
                var distanciaMetros = 0;
                var velocidadPromedioKmh = 0;
                var fchInicioHistorial = new Date();
                var fchFinHistorial = new Date();



                map = new google.maps.Map(document.getElementById('map'), {
                    center: {
                        lat: -7.16,
                        lng: -78.51
                    },
                    zoom: 14
                });

                // capa de trafico
                var transitLayer = new google.maps.TransitLayer();
                transitLayer.setMap(map);
                var trafficLayer = new google.maps.TrafficLayer();
                trafficLayer.setMap(map);


                var infoWindow = new google.maps.InfoWindow({
                    map: map
                });


                // Try HTML5 geolocation.
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };

                        infoWindow.setPosition(pos);
                        infoWindow.setContent('Location found.');
                        map.setCenter(pos);

                    }, function() {
                        handleLocationError(true, infoWindow, map.getCenter());
                    });
                } else {
                    // Browser doesn't support Geolocation
                    handleLocationError(false, infoWindow, map.getCenter());
                }

                //crear marcadores

                //obtener unidades
                window.onload = function() {
                    iniciarMonitoreo(); //inicia monitoreo recursivo
                };


                function redraw(callback) {
                    /*map.setCenter({
                        lat: movPos.lat,
                        lng: movPos.lng,
                        alt: 0
                    }); */
                    //remover marcadores
                    var idOrganizacion = mainCtrl.scope().usuario.idOrganizacion;

                    var flgMostrarHistorial = mainCtrl.scope().flgMostrarHistorial;

                    var unidadSeleccionada = mainCtrl.scope().unidadSeleccionada;

                    var mostrarUnidadesDesconectadas = mainCtrl.scope().mostrarUnidadesDesconectadas;

                    var tipoSeleccionado = mainCtrl.scope().tipoSeleccionado;

                    var asignadoSeleccionado = mainCtrl.scope().asignadoSeleccionado;

                    //marker.setPosition(movPos);
                    mainCtrl.scope().obtenerUnidadesFiltro(idOrganizacion, mostrarUnidadesDesconectadas,tipoSeleccionado,asignadoSeleccionado, function() {

                        //remover marcadores
                        listaMarcadores.forEach(function(marcador) {
                            marcador.setMap(null);
                        });

                        listaMarcadores = [];

                        //callback
                        var unidades = mainCtrl.scope().listaUnidades;

                        unidades.forEach(function(unidad) {
                            var movPos = {
                                lat: unidad.geometry.coordinates[0],
                                lng: unidad.geometry.coordinates[1]
                            };

                            var rutaImagen = "/images/icons/";

                            var nombreImagen = unidad.properties.tipo + ".png"; // nombrar segun el tipo de unidad para que por cada tipo haya un marcador distinto

                            //si el atributo estado es desconectado agregar BN al nombre de la imagen
                            if (unidad.properties.estado == "D") {
                                nombreImagen = unidad.properties.tipo + "BN.png";

                            }

                            var marker = new google.maps.Marker({
                                position: movPos,
                                map: map,
                                title: unidad.properties.identificador,
                                icon: rutaImagen + nombreImagen,
                                unidad: unidad
                            });
                            google.maps.event.addListener(marker, 'click', function() {
                                currentMarker = marker;
                                mostrarInfo();
                            });
                            listaMarcadores.push(marker);

                            //agregar lineas a historial
                            if (flgMostrarHistorial) {
                                if (unidadSeleccionada._id == unidad._id) {
                                    ruta.push(movPos);

                                }
                            }

                        });

                        //obtener historial y crear polilinea

                        callback(); //finaliza ejecucion asincrona

                    }); // fin  obtener organizaciones
                }

                function animateCircle(line) {
                    var count = 0;
                    window.setInterval(function() {
                        count = (count + 1) % 200;

                        var icons = line.get('icons');
                        icons[0].offset = (count / 2) + '%';
                        line.set('icons', icons);
                    }, 20);
                }

                function mostrarInfo() {
                    // cada vez que se hace click en el marcador poner en false el mostrar historial
                    // para que siempre lo muestre
                    mainCtrl.scope().flgMostrarHistorial = false;
                    marker = currentMarker;
                    console.log(marker.unidad.properties.identificador);
                    //seleccionar unidad
                    mainCtrl.scope().unidadSeleccionada = marker.unidad;
                    distanciaMetros = 0;

                    btnVerHistorialClick(function() {
                        var estado = "Desconectado";
                        if (marker.unidad.properties.estado == "C") {
                            estado = "Conectado";
                        }
                        var btnHistorialTitle = mainCtrl.scope().btnHistorialTitle;
                        var contentString = "<div>" +
                            "<h1>" + marker.unidad.properties.identificador + "</h1>" +
                            "<p>Tipo: " + marker.unidad.properties.tipo + "</p>" +
                            "<p>Placa: " + marker.unidad.properties.placa + "</p>" +
                            "<p>Asignado: " + marker.unidad.properties.asignado.nombres + "</p>" +
                            "<p>Estado: " + estado + "</p>" +
                            "<p>Distancia Trayecto: " + (distanciaMetros / 1000).toFixed(2).toString() + " Km </p>" +
                            "<p>Velocidad Promedio: " + velocidadPromedioKmh.toString() + " Km/h </p>" +
                            "<p>" + "<button type='button' id='btnMostrarHistorial' class='form-control btn btn-primary' name='btnHistorial' onclick='btnVerHistorialClick()'>" + btnHistorialTitle + "</button></p>"
                        "</div>";

                        if (infowindow) {
                            infowindow.close();
                            infowindow = null;
                        }

                        infowindow = new google.maps.InfoWindow({
                            content: contentString,
                            position: marker.position
                        });


                        infowindow.open(map);

                    });
                }

                function btnVerHistorialClick(callback) {
                    var metodoAngular = mainCtrl.scope().btnMostrarHistorialClick;
                    metodoAngular();
                    listaHistorial = [];
                    ruta = [];
                    var flgMostrarHistorial = mainCtrl.scope().flgMostrarHistorial;
                    var btnHistorialTitle = mainCtrl.scope().btnHistorialTitle;

                    var boton = document.getElementById('btnMostrarHistorial');
                    if (boton != undefined && boton != null) {
                        boton.innerHTML = btnHistorialTitle;

                    }

                    if (flightPath != undefined && flightPath != null) {
                        flightPath.setMap(null);
                    }
                    velocidadPromedioKmh = 0;
                    //obtener historial
                    if (flgMostrarHistorial) {

                        mainCtrl.scope().obtenerHistorial(function() {
                            velocidadPromedioKmh = 0;
                            listaHistorial = mainCtrl.scope().listaHistorial;
                            if (listaHistorial != undefined && listaHistorial != null) {
                                var cont = 0;

                                listaHistorial.forEach(function(hist) {
                                    if (cont == 0) {
                                        //primer elemento
                                        fchInicioHistorial = Date.parse(hist.properties.fecha_registro);
                                        console.log("F. Inicio: " + (new Date(fchInicioHistorial)).toISOString());
                                    }
                                    var movPos = {
                                        lat: hist.geometry.coordinates[0],
                                        lng: hist.geometry.coordinates[1]
                                    };
                                    ruta.push(movPos);
                                    cont++;
                                    if (cont == listaHistorial.length) {
                                        //uiltimo elemento
                                        fchFinHistorial = Date.parse(hist.properties.fecha_registro);
                                        console.log("F. Fin: " + (new Date(fchFinHistorial)).toISOString());
                                    }

                                });

                                if (ruta != undefined && ruta != null && ruta.length > 0) {
                                    var lineSymbol = {
                                        path: google.maps.SymbolPath.CIRCLE,
                                        scale: 5,
                                        strokeColor: '#990033'
                                    };
                                    flightPath = new google.maps.Polyline({
                                        path: ruta,
                                        icons: [{
                                            icon: lineSymbol,
                                            offset: '100%'
                                        }],
                                        geodesic: true,
                                        strokeColor: '#2874A6',
                                        strokeOpacity: 0.6,
                                        strokeWeight: 4
                                    });
                                    flightPath.setMap(map);
                                    distanciaMetros = google.maps.geometry.spherical.computeLength(flightPath.getPath().getArray());
                                    //velocidad Promedio
                                    var diffSegundos = (fchFinHistorial - fchInicioHistorial) / 1000;
                                    if (diffSegundos > 0) {
                                        velocidadPromedioKmh = (distanciaMetros * 3600) / (1000 * diffSegundos);
                                        console.log("Velocidad: " + velocidadPromedioKmh);
                                        animateCircle(flightPath);
                                    }


                                }
                            }
                            if (callback != undefined) callback();
                        });

                    } else {
                        if (callback != undefined) callback();
                    }

                }


                //bucle recursivo para asegurar que funcione el setTimeout
                //var i = 0, n = 100;
                function iniciarMonitoreo() {
                    //  movPos.lat += 0.01;
                    //  movPos.lng += 0.01;

                    //  alert(movPos.lat.toString() +" "+ movPos.lng.toString());
                    redraw(function() {
                        //al terminar
                        setTimeout(iniciarMonitoreo, 1000);

                    });

                    //i++;
                    //  if( i < n ){
                    //setTimeout(iniciarMonitoreo, 1000);
                    //  }
                }

                function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                    infoWindow.setPosition(pos);
                    infoWindow.setContent(browserHasGeolocation ? 'Error: The Geolocation service failed.' :
                        'Error: Your browser doesn\'t support geolocation.');
                }

                //inicializar tabs
                $(document).ready(function() {
                    //activar tabs
                    $('#filtrosTab a').click(function(e) {

                        if(e!=undefined && e!=null) e.preventDefault();

                        $(this).tab('show');
                    });

                    $('#fechasTab a').click(function(e) {

                        if(e!=undefined && e!=null) e.preventDefault();

                        $(this).tab('show');
                    });

                });
            </script>

        </div>
    </main>
    <footer>
        <% include partials/footer %>
    </footer>

</body>

</html>
