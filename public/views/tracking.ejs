<!-- views/index.ejs -->
<!doctype html>
<html>

<head>
    <% include partials/head %>
</head>

<body>
    <header>
        <% include partials/header %>
            <style media="screen">
                #map {
                    height: 100%
                }
            </style>

    </header>
    <main>
        <script src="js/trackingApp.js"></script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCfaLOJAefzXT75bIWgxd8RmcWz5rWbMec&signed_in=true">
        </script>

        <div class="container" ng-app="trackingApp" ng-controller="MainController">

            <h6>{{usuario.local.email}}</h6>
            <h3>{{organizacion.razon_social}}</h3>
            <!-- Opciones de Filtro -->
            <div class="panel panel-default">
                <div class="form form-inline">
                    <div class="form-group">
                        <label for="cmbUnidad">Unidad:</label>
                        <select id="cmbUnidad" class="form-control" style="width: 250px" ng-options="unidad.properties.identificador for unidad in listaUnidades track by unidad._id" ng-model="unidadSeleccionada" ng-change="cmbUnidadChange()">
                        </select>

                    </div>
                    <div class="form-group">
                        <label for="">Desde:</label>
                        <div class="input-group">
                            <input type="text" name="fchInicio" class="form-control" id="fchInicio" uib-datepicker-popup="dd/MM/yyyy" is-open="popup1.opened" datepicker-options="dateOptions" ng-model="fechaDesde" />
                            <span class="input-group-btn">
                                  <button type="button" class="btn btn-default" ng-click="open1()"><i class="glyphicon glyphicon-calendar"></i></button>
                            </span>

                        </div>
                      <!--  <div uib-timepicker ng-model="fchInicio" hour-step="1" minute-step="10" show-meridian="false"></div> -->
                    </div>

                    <div class="form-group">
                        <label for="">Hasta:</label>
                        <div class="input-group">
                            <input type="text" name="fchFin" class="form-control" id="fchFIn" uib-datepicker-popup="dd/MM/yyyy" is-open="popup2.opened" datepicker-options="dateOptions" ng-model="fechaHasta" />
                            <span class="input-group-btn">
                              <button type="button" class="btn btn-default" ng-click="open2()"><i class="glyphicon glyphicon-calendar"></i></button>
                            </span>

                        </div>
                      <!--  <div uib-timepicker ng-model="fchFin" hour-step="1" minute-step="10" show-meridian="false"></div> -->
                    </div>
                    <div class="form-group">
                        <button type="button" class="form-control" name="btnHistorial" onclick="btnVerHistorialClick()">{{btnHistorialTitle}}</button>
                    </div>

                </div>

            </div>
            <!-- MAPA-->
            <div class="panel panel-default" style="height:700px">
                <div id="map">

                </div>

            </div>


            <script type="text/javascript">
                // obtener usuario de session
                var map;

                var listaMarcadores = [];
                var ruta = [];
                var listaHistorial = [];
                var flightPath;





                map = new google.maps.Map(document.getElementById('map'), {
                    center: {
                        lat: -7.16,
                        lng: -78.51
                    },
                    zoom: 14
                });

                // capa de trafico
                var transitLayer = new google.maps.TransitLayer();
                transitLayer.setMap(map);


                var infoWindow = new google.maps.InfoWindow({
                    map: map
                });


                // Try HTML5 geolocation.
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };

                        infoWindow.setPosition(pos);
                        infoWindow.setContent('Location found.');
                        map.setCenter(pos);

                    }, function() {
                        handleLocationError(true, infoWindow, map.getCenter());
                    });
                } else {
                    // Browser doesn't support Geolocation
                    handleLocationError(false, infoWindow, map.getCenter());
                }

                //crear marcadores

                //obtener unidades
                window.onload = function() {
                    iniciarMonitoreo(); //inicia monitoreo recursivo
                };


                function redraw(callback) {
                    /*map.setCenter({
                        lat: movPos.lat,
                        lng: movPos.lng,
                        alt: 0
                    }); */
                    //remover marcadores
                    var idOrganizacion = angular.element(document.querySelector('[ng-controller="MainController"]')).scope().usuario.idOrganizacion;

                    var flgMostrarHistorial = angular.element(document.querySelector('[ng-controller="MainController"]')).scope().flgMostrarHistorial;

                    var unidadSeleccionada = angular.element(document.querySelector('[ng-controller="MainController"]')).scope().unidadSeleccionada;


                    //marker.setPosition(movPos);
                    angular.element(document.querySelector('[ng-controller="MainController"]')).scope().obtenerUnidadesOrganizacion(idOrganizacion, function() {

                        //remover marcadores
                        listaMarcadores.forEach(function(marcador) {
                            marcador.setMap(null);
                        });

                        listaMarcadores = [];

                        //callback
                        var unidades = angular.element(document.querySelector('[ng-controller="MainController"]')).scope().listaUnidades;

                        unidades.forEach(function(unidad) {
                            var movPos = {
                                lat: unidad.geometry.coordinates[0],
                                lng: unidad.geometry.coordinates[1]
                            };

                            var rutaImagen = "/images/icons/";
                            var nombreImagen = unidad.properties.tipo+".png"; // nombrar segun el tipo de unidad para que por cada tipo haya un marcador distinto

                            var marker = new google.maps.Marker({
                                position: movPos,
                                map: map,
                                title: unidad.properties.identificador,
                                icon: rutaImagen+nombreImagen
                            });
                            listaMarcadores.push(marker);

                            //agregar lineas a historial
                            if (flgMostrarHistorial) {
                                if (unidadSeleccionada._id == unidad._id) {
                                    ruta.push(movPos);

                                }
                            }

                        });

                        //obtener historial y crear polilinea


                        callback(); //finaliza ejecucion asincrona

                    }); // fin  obtener organizaciones


                }


                function btnVerHistorialClick() {
                    var metodoAngular = angular.element(document.querySelector('[ng-controller="MainController"]')).scope().btnBuscarClick;
                    metodoAngular();
                    listaHistorial = [];
                    ruta = [];
                    var flgMostrarHistorial = angular.element(document.querySelector('[ng-controller="MainController"]')).scope().flgMostrarHistorial;
                    if (flightPath != undefined && flightPath != null) {
                        flightPath.setMap(null);
                    }
                    //obtener historial
                    if (flgMostrarHistorial) {
                        angular.element(document.querySelector('[ng-controller="MainController"]')).scope().obtenerHistorial(function() {
                            listaHistorial = angular.element(document.querySelector('[ng-controller="MainController"]')).scope().listaHistorial;
                            if (listaHistorial != undefined && listaHistorial != null) {
                                listaHistorial.forEach(function(hist) {
                                    var movPos = {
                                        lat: hist.geometry.coordinates[0],
                                        lng: hist.geometry.coordinates[1]
                                    };
                                    ruta.push(movPos);
                                });

                                if (ruta != undefined && ruta != null && ruta.length > 0) {
                                    flightPath = new google.maps.Polyline({
                                        path: ruta,
                                        geodesic: true,
                                        strokeColor: '#bf4040',
                                        strokeOpacity: 0.6,
                                        strokeWeight: 2
                                    });
                                    flightPath.setMap(map);

                                }


                            }
                        });



                    }




                }


                //bucle recursivo para asegurar que funcione el setTimeout
                //var i = 0, n = 100;
                function iniciarMonitoreo() {
                    //  movPos.lat += 0.01;
                    //  movPos.lng += 0.01;

                    //  alert(movPos.lat.toString() +" "+ movPos.lng.toString());
                    redraw(function() {
                        //al terminar
                        setTimeout(iniciarMonitoreo, 1000);

                    });

                    //i++;
                    //  if( i < n ){
                    //setTimeout(iniciarMonitoreo, 1000);
                    //  }
                }

                function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                    infoWindow.setPosition(pos);
                    infoWindow.setContent(browserHasGeolocation ? 'Error: The Geolocation service failed.' :
                        'Error: Your browser doesn\'t support geolocation.');
                }
            </script>

        </div>
    </main>
    <footer>
        <% include partials/footer %>
    </footer>

</body>

</html>
